# install Bioconductor and check version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::version()
# install Bioconductor packages
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
# load installed packages
library(BSgenome.Hsapiens.UCSC.hg19)
library(genefilter)
library(geneplotter)
BiocManager::install(c("genefilter","geneplotter"))
library(BSgenome.Hsapiens.UCSC.hg19)
library(genefilter)
library(geneplotter)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome.Hsapiens.UCSC.hg19)
library(genefilter)
library(geneplotter)
install.packages('brio')
remove.packages('brio')
remove.pacakges("Brio")
install.packages("brio")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
install_version("brio", version = "1.1.1")
require(devtools)
require('devtools')
install.packages('devtools')
library(devtools)
require(devtools)
install_version("brio", version = "1.1.1")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome)
remove.pacakges(BSGenome)
remove.packages(BSGenome)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
remove.packages("BSgenome")
biocLite("BSgenome.Hsapiens.UCSC.hg19")
library(bioclite)
install.packages('bioclite')
library(biocLite)
install.packages('biocLite')
BiocManager::install("biocLite")
library(biocLite)
source("http://bioconductor.org/biocLite.R")
biocLite("BSgenome.Hsapiens.UCSC.hg19")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
remove.packages("BSgenome")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome")
library(BSgenome.Hsapiens.UCSC.hg19)
BiocManager::install("BSgenome.Hsapiens")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19", dep=True)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19", dep = True)
library(dyld)
library(devtools)
detach("package:devtools", unload = TRUE)
remove.packages("devtools")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19", dep = True)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("GenomeInfoDbData")
remove.packages("htmltools")
install.packages('htmltools')
BiocManager::install("GenomeInfoDbData")
library(GenomeInfoDbData)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
library(BSGenome.Hsapiens.UCSC.hg19)
library(BSgenome.Hsapiens.UCSC.hg19)
library(genefilter)
library(geneplotter)
help.start()
?mean
help(mean)
help(package="genefilter")
# inspect objects, classes and methods
library(Biobase)    # load one of the core Bioconductor packages
?ExpressionSet
?"ExpressionSet-class"
methods(class = ExpressionSet)
BiocManager::version()
BiocManager::install(c("genefu",
"COPDSexualDimorphism",
"gwascat",
"hgu133a.db",
"genomicsclass/tissuesGeneExpression"))
BiocManager::install(c("genefu",
"COPDSexualDimorphism",
"gwascat",
"hgu133a.db",
"genomicsclass/tissuesGeneExpression"))
library(genefu)
data(sig.gene70)
dim(sig.gene70)
head(sig.gene70)[,1:6]
library(COPDSexualDimorphism.data)
BiocManager::install("COPDSexualDimorphism.data")
BiocManager::install("COPDSexualDimorphism.data")
BiocManager::install("COPDSexualDimorphism.data")
library(COPDSexualDimorphism.data)
data(lgrc.expr.meta)
library(gwascat)
library(ebicat37)
BiocManager::install("ebicat37")
data(ebicat37)
library(gwascat)
BiocManager::install(c("gwascat", "hgu133a.db", "genomicsclass/tissuesGeneExpression"))
data(ebicat37)
library(gwascat)
data(ebicat37)
â‰¥
library(gwascat)
data(ebicat37)
BiocManager::install(c("genefu",
"COPDSexualDimorphism",
"gwascat",
"hgu133a.db",
"genomicsclass/tissuesGeneExpression"))
data(ebicat37)
library(genefu)
data(ebicat37)
library(COPDSexualDimorphism.data)
data(lgrc.expr.meta)
data(ebicat37)
library(genefu)
library(gwascat)
gwascat
data(ebicat_2020_04_30)
ebicat_2020_04_30
```r
dim(iris)
```
# Section 1: What we measure and why
This is a list
* item 1
* item 2
* item 3
```r
dim(iris)
```
# Section 1: What we measure and why
This is a list
* item 1
* item 2
* item 3
unlink('section1_cache', recursive = TRUE)
# Section 1: What we measure and why
# # Information about the 70 gene signature used in the Mammaprint algorithm
```r
library(genefu)
data(sig.gene70)
dim(sig.gene70)
head(sig.gene70)[,1:6]
```
library(gwascat)
data(ebicat_2020_04_30)
ebicat_2020_04_30
